// <auto-generated />
using System;
using Backend.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(InmobiliariaContext))]
    [Migration("20250830045913_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Services.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ClientId"));

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Document = "12345678",
                            Email = "juanperez@hotmail.com",
                            FirstName = "Juan",
                            IsDeleted = false,
                            LastName = "Perez",
                            Phone = "555-1234"
                        },
                        new
                        {
                            ClientId = 2,
                            Document = "87654321",
                            Email = "mariagomez@hotmail.com",
                            FirstName = "Maria",
                            IsDeleted = false,
                            LastName = "Gomez",
                            Phone = "555-5678"
                        },
                        new
                        {
                            ClientId = 3,
                            Document = "11223344",
                            Email = "carloslopez@hotmail.com",
                            FirstName = "Carlos",
                            IsDeleted = false,
                            LastName = "Lopez",
                            Phone = "555-8765"
                        },
                        new
                        {
                            ClientId = 4,
                            Document = "44332211",
                            Email = "anamartinez@hotmail.com",
                            FirstName = "Ana",
                            IsDeleted = false,
                            LastName = "Martinez",
                            Phone = "555-4321"
                        },
                        new
                        {
                            ClientId = 5,
                            Document = "55667788",
                            Email = "luisrodri@hotmail.com",
                            FirstName = "Luis",
                            IsDeleted = false,
                            LastName = "Rodriguez",
                            Phone = "555-6789"
                        },
                        new
                        {
                            ClientId = 6,
                            Document = "88776655",
                            Email = "soffer@hotmail.com",
                            FirstName = "Sofia",
                            IsDeleted = false,
                            LastName = "Fernandez",
                            Phone = "555-9876"
                        },
                        new
                        {
                            ClientId = 7,
                            Document = "99887766",
                            Email = "diegosanchez@hotmail.com",
                            FirstName = "Diego",
                            IsDeleted = false,
                            LastName = "Sanchez",
                            Phone = "555-5432"
                        },
                        new
                        {
                            ClientId = 8,
                            Document = "66778899",
                            Email = "lauraramirez@hotmail.com",
                            FirstName = "Laura",
                            IsDeleted = false,
                            LastName = "Ramirez",
                            Phone = "555-2109"
                        },
                        new
                        {
                            ClientId = 9,
                            Document = "33445566",
                            Email = "jorgetorres@hotmail.com",
                            FirstName = "Jorge",
                            IsDeleted = false,
                            LastName = "Torres",
                            Phone = "555-6543"
                        },
                        new
                        {
                            ClientId = 10,
                            Document = "22113344",
                            Email = "elena@hotmail.com",
                            FirstName = "Elena",
                            IsDeleted = false,
                            LastName = "Vargas",
                            Phone = "555-3210"
                        });
                });

            modelBuilder.Entity("Services.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Document = "12345678",
                            Email = "pedro.alvarez@test.com",
                            FirstName = "Pedro",
                            IsDeleted = false,
                            LastName = "Alvarez",
                            Phone = "555-1111",
                            Role = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            Document = "87654321",
                            Email = "marta.blanco@test.com",
                            FirstName = "Marta",
                            IsDeleted = false,
                            LastName = "Blanco",
                            Phone = "555-2222",
                            Role = 0
                        },
                        new
                        {
                            EmployeeId = 3,
                            Document = "11223344",
                            Email = "javier.cruz@test.com",
                            FirstName = "Javier",
                            IsDeleted = false,
                            LastName = "Cruz",
                            Phone = "555-3333",
                            Role = 0
                        },
                        new
                        {
                            EmployeeId = 4,
                            Document = "44332211",
                            Email = "lucia.duarte@test.com",
                            FirstName = "Lucia",
                            IsDeleted = false,
                            LastName = "Duarte",
                            Phone = "555-4444",
                            Role = 2
                        },
                        new
                        {
                            EmployeeId = 5,
                            Document = "55667788",
                            Email = "alberto.espinoza@test.com",
                            FirstName = "Alberto",
                            IsDeleted = false,
                            LastName = "Espinoza",
                            Phone = "555-5555",
                            Role = 0
                        });
                });

            modelBuilder.Entity("Services.Models.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("OwnerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("OwnerId");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            OwnerId = 1,
                            Address = "Av. Libertad 123",
                            Document = "10111222",
                            Email = "ricardo.mendoza@test.com",
                            FirstName = "Ricardo",
                            IsDeleted = false,
                            LastName = "Mendoza",
                            Phone = "555-6001"
                        },
                        new
                        {
                            OwnerId = 2,
                            Address = "Calle San Martín 456",
                            Document = "20212223",
                            Email = "claudia.ortiz@test.com",
                            FirstName = "Claudia",
                            IsDeleted = false,
                            LastName = "Ortiz",
                            Phone = "555-6002"
                        },
                        new
                        {
                            OwnerId = 3,
                            Address = "Bv. Belgrano 789",
                            Document = "30313233",
                            Email = "fernando.silva@test.com",
                            FirstName = "Fernando",
                            IsDeleted = false,
                            LastName = "Silva",
                            Phone = "555-6003"
                        },
                        new
                        {
                            OwnerId = 4,
                            Address = "Ruta 8 Km 12",
                            Document = "40414243",
                            Email = "gabriela.moreno@test.com",
                            FirstName = "Gabriela",
                            IsDeleted = false,
                            LastName = "Moreno",
                            Phone = "555-6004"
                        },
                        new
                        {
                            OwnerId = 5,
                            Address = "Pasaje Mitre 321",
                            Document = "50515253",
                            Email = "hernan.castro@test.com",
                            FirstName = "Hernan",
                            IsDeleted = false,
                            LastName = "Castro",
                            Phone = "555-6005"
                        },
                        new
                        {
                            OwnerId = 6,
                            Address = "Av. Rivadavia 654",
                            Document = "60616263",
                            Email = "mariana.acosta@test.com",
                            FirstName = "Mariana",
                            IsDeleted = false,
                            LastName = "Acosta",
                            Phone = "555-6006"
                        },
                        new
                        {
                            OwnerId = 7,
                            Address = "Calle Italia 432",
                            Document = "70717273",
                            Email = "jorge.suarez@test.com",
                            FirstName = "Jorge",
                            IsDeleted = false,
                            LastName = "Suarez",
                            Phone = "555-6007"
                        },
                        new
                        {
                            OwnerId = 8,
                            Address = "San Juan 876",
                            Document = "80818283",
                            Email = "patricia.vega@test.com",
                            FirstName = "Patricia",
                            IsDeleted = false,
                            LastName = "Vega",
                            Phone = "555-6008"
                        },
                        new
                        {
                            OwnerId = 9,
                            Address = "Mitre 147",
                            Document = "90919293",
                            Email = "diego.romero@test.com",
                            FirstName = "Diego",
                            IsDeleted = false,
                            LastName = "Romero",
                            Phone = "555-6009"
                        },
                        new
                        {
                            OwnerId = 10,
                            Address = "Dorrego 258",
                            Document = "10011002",
                            Email = "silvia.herrera@test.com",
                            FirstName = "Silvia",
                            IsDeleted = false,
                            LastName = "Herrera",
                            Phone = "555-6010"
                        });
                });

            modelBuilder.Entity("Services.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("TransactionId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            PaymentId = 1,
                            Amount = 1500m,
                            IsDeleted = false,
                            Note = "Pago inicial en efectivo",
                            PaymentDate = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 0,
                            TransactionId = 1
                        },
                        new
                        {
                            PaymentId = 2,
                            Amount = 120000m,
                            IsDeleted = false,
                            Note = "Pago con tarjeta",
                            PaymentDate = new DateTime(2025, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 1,
                            TransactionId = 2
                        },
                        new
                        {
                            PaymentId = 3,
                            Amount = 500m,
                            IsDeleted = false,
                            Note = "Transferencia bancaria",
                            PaymentDate = new DateTime(2025, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 2,
                            TransactionId = 3
                        },
                        new
                        {
                            PaymentId = 4,
                            Amount = 95000m,
                            IsDeleted = false,
                            Note = "Pago con Mastercard",
                            PaymentDate = new DateTime(2025, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 1,
                            TransactionId = 4
                        },
                        new
                        {
                            PaymentId = 5,
                            Amount = 1350m,
                            IsDeleted = false,
                            Note = "Pago en mostrador",
                            PaymentDate = new DateTime(2025, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 0,
                            TransactionId = 5
                        },
                        new
                        {
                            PaymentId = 6,
                            Amount = 80000m,
                            IsDeleted = false,
                            Note = "Transferencia online",
                            PaymentDate = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 2,
                            TransactionId = 6
                        },
                        new
                        {
                            PaymentId = 7,
                            Amount = 600m,
                            IsDeleted = false,
                            Note = "Pago parcial en efectivo",
                            PaymentDate = new DateTime(2025, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 0,
                            TransactionId = 7
                        },
                        new
                        {
                            PaymentId = 8,
                            Amount = 40000m,
                            IsDeleted = false,
                            Note = "Pago cancelado con tarjeta",
                            PaymentDate = new DateTime(2025, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 1,
                            TransactionId = 8
                        },
                        new
                        {
                            PaymentId = 9,
                            Amount = 1100m,
                            IsDeleted = false,
                            Note = "Transferencia programada",
                            PaymentDate = new DateTime(2025, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 2,
                            TransactionId = 9
                        },
                        new
                        {
                            PaymentId = 10,
                            Amount = 90000m,
                            IsDeleted = false,
                            Note = "Pago final con tarjeta",
                            PaymentDate = new DateTime(2025, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = 1,
                            TransactionId = 10
                        });
                });

            modelBuilder.Entity("Services.Models.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PropertyId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId1")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Room")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("PropertyId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("OwnerId1");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            PropertyId = 1,
                            Address = "Calle 123",
                            City = "San Justo",
                            IsDeleted = false,
                            OwnerId = 1,
                            Price = 75000m,
                            Province = "Santa Fe",
                            Room = 4,
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            PropertyId = 2,
                            Address = "Av. Libertador 456",
                            City = "Buenos Aires",
                            IsDeleted = false,
                            OwnerId = 2,
                            Price = 120000m,
                            Province = "Buenos Aires",
                            Room = 3,
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            PropertyId = 3,
                            Address = "Ruta 9 KM 102",
                            City = "Rosario",
                            IsDeleted = false,
                            OwnerId = 3,
                            Price = 50000m,
                            Province = "Santa Fe",
                            Room = 0,
                            Status = 0,
                            Type = 2
                        },
                        new
                        {
                            PropertyId = 4,
                            Address = "Calle San Martín 789",
                            City = "Mendoza",
                            IsDeleted = false,
                            OwnerId = 4,
                            Price = 95000m,
                            Province = "Mendoza",
                            Room = 2,
                            Status = 3,
                            Type = 3
                        },
                        new
                        {
                            PropertyId = 5,
                            Address = "Los Álamos 101",
                            City = "Córdoba",
                            IsDeleted = false,
                            OwnerId = 5,
                            Price = 135000m,
                            Province = "Córdoba",
                            Room = 5,
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            PropertyId = 6,
                            Address = "Mitre 202",
                            City = "Santa Fe",
                            IsDeleted = false,
                            OwnerId = 6,
                            Price = 80000m,
                            Province = "Santa Fe",
                            Room = 2,
                            Status = 2,
                            Type = 1
                        },
                        new
                        {
                            PropertyId = 7,
                            Address = "Belgrano 303",
                            City = "Mar del Plata",
                            IsDeleted = false,
                            OwnerId = 7,
                            Price = 60000m,
                            Province = "Buenos Aires",
                            Room = 1,
                            Status = 0,
                            Type = 3
                        },
                        new
                        {
                            PropertyId = 8,
                            Address = "Camino Rural S/N",
                            City = "San Luis",
                            IsDeleted = false,
                            OwnerId = 8,
                            Price = 40000m,
                            Province = "San Luis",
                            Room = 0,
                            Status = 1,
                            Type = 2
                        },
                        new
                        {
                            PropertyId = 9,
                            Address = "Av. Rivadavia 404",
                            City = "Buenos Aires",
                            IsDeleted = false,
                            OwnerId = 9,
                            Price = 110000m,
                            Province = "Buenos Aires",
                            Room = 4,
                            Status = 3,
                            Type = 1
                        },
                        new
                        {
                            PropertyId = 10,
                            Address = "Italia 505",
                            City = "Neuquén",
                            IsDeleted = false,
                            OwnerId = 10,
                            Price = 90000m,
                            Province = "Neuquén",
                            Room = 3,
                            Status = 0,
                            Type = 0
                        });
                });

            modelBuilder.Entity("Services.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId1")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("PropertyId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ClientId1");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.HasIndex("PropertyId");

                    b.HasIndex("PropertyId1");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            Amount = 1500m,
                            ClientId = 1,
                            EmployeeId = 1,
                            EndDate = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 1,
                            StartDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            TransactionId = 2,
                            Amount = 120000m,
                            ClientId = 2,
                            EmployeeId = 2,
                            EndDate = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 2,
                            StartDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            TransactionId = 3,
                            Amount = 500m,
                            ClientId = 3,
                            EmployeeId = 3,
                            EndDate = new DateTime(2025, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 3,
                            StartDate = new DateTime(2025, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            TransactionId = 4,
                            Amount = 95000m,
                            ClientId = 4,
                            EmployeeId = 4,
                            EndDate = new DateTime(2025, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 4,
                            StartDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            TransactionId = 5,
                            Amount = 1350m,
                            ClientId = 5,
                            EmployeeId = 5,
                            EndDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 5,
                            StartDate = new DateTime(2025, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            TransactionId = 6,
                            Amount = 80000m,
                            ClientId = 6,
                            EmployeeId = 1,
                            EndDate = new DateTime(2025, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 6,
                            StartDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Type = 1
                        },
                        new
                        {
                            TransactionId = 7,
                            Amount = 600m,
                            ClientId = 7,
                            EmployeeId = 2,
                            EndDate = new DateTime(2025, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 7,
                            StartDate = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            TransactionId = 8,
                            Amount = 40000m,
                            ClientId = 8,
                            EmployeeId = 3,
                            EndDate = new DateTime(2025, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 8,
                            StartDate = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 2,
                            Type = 1
                        },
                        new
                        {
                            TransactionId = 9,
                            Amount = 1100m,
                            ClientId = 9,
                            EmployeeId = 4,
                            EndDate = new DateTime(2026, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 9,
                            StartDate = new DateTime(2025, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            TransactionId = 10,
                            Amount = 90000m,
                            ClientId = 10,
                            EmployeeId = 5,
                            EndDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            PropertyId = 10,
                            StartDate = new DateTime(2025, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            Type = 1
                        });
                });

            modelBuilder.Entity("Services.Models.Payment", b =>
                {
                    b.HasOne("Services.Models.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Services.Models.Property", b =>
                {
                    b.HasOne("Services.Models.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Services.Models.Owner", null)
                        .WithMany("Properties")
                        .HasForeignKey("OwnerId1");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Services.Models.Transaction", b =>
                {
                    b.HasOne("Services.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Services.Models.Client", null)
                        .WithMany("Transaction")
                        .HasForeignKey("ClientId1");

                    b.HasOne("Services.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Services.Models.Employee", null)
                        .WithMany("Transaction")
                        .HasForeignKey("EmployeeId1");

                    b.HasOne("Services.Models.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Services.Models.Property", null)
                        .WithMany("Transaction")
                        .HasForeignKey("PropertyId1");

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Services.Models.Client", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Services.Models.Employee", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Services.Models.Owner", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Services.Models.Property", b =>
                {
                    b.Navigation("Transaction");
                });
#pragma warning restore 612, 618
        }
    }
}
